_start: to label the entry point of a program //汇编程序需要用_start标签来标记程序的入口点，开始标号
.global: declares program labels that are accessable from external programs //标明此段汇编函数可以被外部程序调用，外部程序可见
.section: define a section //每个段开始前必须用.section定义段名，.section + 段号
int: to use a Linux system call //产生系统调用，并且指定系统调用号
int $0x80: generate a system call, with a value of 0x80 //产生0x80软中断，并且具体的中断处理号由eax寄存器给出。其中eax=4时，表示调用write系统函数，write参数由ebx（文件描述符，1表示标准输出stdout）, ecx（开始地址）, edx（字符个数）提前给出。其中eax=1时，表示调用exit函数，exit参数由ebx（0表示正常退出）提前给出。
gdb: break $label+offset: specify breakpoints, specify the location relative to the nearest label. //设置断点，程序标号+标号偏移行
gdb: info registers: see values of all registers. //观察所有寄存器的值
gdb: print: print values of registers, variables. modifier{/x:display in hexadecimal, /d:display in decimal, /t:display in binary} //观察寄存器，变量的值，指定参数可以让数值按指定格式显示
gdb: x: display the values of specific locations. modifier{/nyz:{n:the numbers of fields to display, y:format{c:character,d:decimal,x:hexadecimal},z:size of fields{b:byte,h:16bit(half-word);w:32bit(a word)}}}.指定需要显示的内存，参数可以指定内存大小，显示格式，按字节/按半字/按字。


